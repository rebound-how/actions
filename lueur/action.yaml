name: 'Rebound lueur'
description: 'Run a lueur scenario'
author: 'Rebound'
branding:
  icon: "check-circle"
  color: "red"
inputs:
  github-token:
    description: "The GitHub token to create issues if requested"
    required: true
  scenario:
    description: "Path to a lueur scenario file or a directory containing scenario files"
    required: true
  report:
    description: "Path where to store the generated report"
    required: false
    default: "./report.md"
  result:
    description: "Path where to store the scenario results"
    required: false
    default:  "./results.json"
  create-issue-on-failure:
    description: "Create a new issue on test failure"
    required: false
    default:  "false"
runs:
  using: "composite"
  steps:
    - name: Install lueur
      shell: bash
      run: |
        curl -s -Lo $HOME/lueur https://github.com/Lawouach/demo/releases/download/1/lueur
        chmod +x $HOME/lueur

        $HOME/lueur --version

    - name: Run scenarios
      shell: bash
      run: |
        $HOME/lueur scenario run \
          --scenario ${{ inputs.scenario }} \
          --report ${{ inputs.report }} \
          --result ${{ inputs.result }}

    - name: Create issue if failed
      if: "${{ inputs.create-issue-on-failure == 'true'}}"
      shell: bash
      run: |
        status=$(cat ${{ inputs.result }} | jq 'all(.items[].expect.got.decision; contains("failure"))' -e -r)
        if status == "false"; then
            gh issue create \
              --title "Rebound / lueur - Scenario failed to meet expectations" \
              -F ${{ inputs.report }}
        fi
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
